package com.smarteinc.api.tests;

import static com.jayway.restassured.RestAssured.given;

import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.json.simple.JSONObject;
import org.testng.Assert;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.google.gson.JsonObject;
import com.jayway.restassured.RestAssured;
import com.jayway.restassured.response.Response;
import com.jayway.restassured.specification.RequestSpecification;
import com.smarteinc.objects.PEApiInputObjects;
import com.smarteinc.objects.PIPLInputObjects;
import com.smarteinc.peapi.PEAPI_Library;
import static com.smarteinc.utility.APIUtility.*;

import com.smarteinc.utility.APIUtility;
import com.smarteinc.utility.ExcelUtility;

public class DirectDialTest {
		
	Properties prop = new Properties();		
	PEApiInputObjects obj;
	
	private static Logger logger = initializeLogger(new MatchBackTest());

	public static Logger initializeLogger(Object classObject) {
		System.setProperty("logDirectory", "..\\com.smarteinc.automation\\logs");
		logger = LogManager.getLogger(classObject.getClass().getSimpleName());
		return logger;
	}

	@BeforeTest
	public void beforeTest() throws IOException, IOException {
	    obj = new PEApiInputObjects();
		String propFileName = "/Config/Tranalyzer.properties";
		
		InputStream inputStream = MatchBackTest.class.getResourceAsStream(propFileName);

		if (inputStream != null) {
			try {
				prop.load(inputStream);
			} catch (IOException e) {

			}
		}		
	}
	
	
	@Test
	public void DirectdialTest()
	{
		PEAPI_Library peLib = new PEAPI_Library();
		Response res = null;
		XSSFSheet sheet = null;
	    String file = MatchBackTest.class.getResource("/TestData/DirectDial/directdial.xlsx").getPath();
		
		try {
			String token = "Bearer 67e92e0c-3f3f-359e-8a66-9c186d41f720";
			String URL = "https://34.68.215.208:8243/dial/1/fetch";
			sheet = ExcelUtility.openSpreadSheet(file, "direct");
			int lastRow = sheet.getLastRowNum();

			Map<String, String> hm = new HashMap<String, String>();
			PEAPI_Library tran = new PEAPI_Library();

			PIPLInputObjects obj = new PIPLInputObjects();
			for (int row = 1; row <= lastRow; row++) {
				// Input fields
				System.out.println("row" + row);
				String pcGuid = ExcelUtility.getCellData(sheet, row, "pc_guid");
				String rcGuid = ExcelUtility.getCellData(sheet, row, "rc_guid");
				String linkedInURL = ExcelUtility.getCellData(sheet, row, "linkedin_url");
				String action = ExcelUtility.getCellData(sheet, row, "action");
				String key_name = ExcelUtility.getCellData(sheet, row, "key_name");

				String strBody = getJsonBody("pc_guid",pcGuid,"rc_guid", rcGuid, "linkedin_url", linkedInURL, "action",action, "key_name", key_name);
						
				
				
//				//res = peLib.getResponseFordirectDial(strBody, URL, token);
				RestAssured.baseURI ="https://restapi.demoqa.com/customer";
				RequestSpecification request = RestAssured.given();
				 
				 JSONObject requestParams = new JSONObject();
				 requestParams.put("FirstName", "Virender"); // Cast
				 requestParams.put("LastName", "Singh");
				 requestParams.put("UserName", "sdimpleuser2dd2011");
				 requestParams.put("Password", "password1");
				 
				 requestParams.put("Email",  "sample2ee26d9@gmail.com");
				 request.body(requestParams.toJSONString());
				 Response response = request.post("/register");
				 
				 int statusCode = response.getStatusCode();
				 Assert.assertEquals(statusCode, "201");
				 String successCode = response.jsonPath().get("SuccessCode");
				 Assert.assertEquals( "Correct Success code was returned", successCode, "OPERATION_SUCCESS");
				
				JsonObject data = APIUtility.getMemberValue(res, "data").getAsJsonObject();
				
				String code = APIUtility.getMemberValueAsString(data, "errorMessage");
				String directDialFlag = APIUtility.getMemberValueAsString(data, "direct_dial_flag");
				String directDial1 = APIUtility.getMemberValueAsString(data, "direct_dial_1");
				String directDial2 = APIUtility.getMemberValueAsString(data, "direct_dial_2");
			}
	     }
		catch(Exception ex)
		{
			
		}
	}	

	
	//@Test
	//public void 
}
